@startuml
boss_controller -> state_detector: config: Boar
note over state_detector
     | *name* | *power* | *color* | *last_time_on* | *last_time_off* |
     | led_1 | On | Red | NUMBER | NUMBER |
     | name | power | color | NUMBER | NUMBER |
end note
state_detector -> state_detector: create_state_table
state_detector -> stream_handler: open_stream(webcam_id:Integer)
activate stream_handler
stream_handler --> state_detector: stream
loop interval 0.1 sec
    state_detector -> homography_provider: getBoardOrientation(frame: ndarray)
    homography_provider --> state_detector: orientation: BoardOrientation
    state_detector -> led_extractor: get_leds(frame: ndarray, orientation: BoardOrientation)
    led_extractor --> state_detector: led_rois: list(ndarray) 
    note over led_extractor
        ATTENTION: 
        order of led_positions list is equal to led object in config object!!!
    end note
    loop led in leds:
        state_detector -> led_state_detector: get_state(led_roi, colors)
        led_state_detector -> led_state_detector: is_on()
        led_state_detector -> led_state_detector: which_color()
        note over led_state_detector
            led_state: 
            {
                light: On,
                color: "RED"
                timestamp: nano_seconds
            }
        end note
        led_state_detector --> state_detector: led_state: LedState
    end
    state_detector -> logger: log_state()
    logger --> state_detector: ok
end



@enduml